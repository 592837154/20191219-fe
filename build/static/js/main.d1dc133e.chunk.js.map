{"version":3,"sources":["App.tsx","serviceWorker.ts","index.tsx"],"names":["Header","Content","Footer","Step","Panel","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","URL","BASEURL","UPLOAD","name","action","headers","authorization","TABS","label","value","breadcrumbs","App","props","onChange","info","file","status","console","log","response","setState","currentStep","message","success","error","changeMenu","a","result","find","item","key","curTab","showModal","navigator","userAgent","visible","warning","hideModal","detail","getData","handleSubmit","e","preventDefault","form","validateFieldsAndScroll","err","values","edit","stopPropagation","delete","loading","fetch","then","json","myJson","listData","renderTabs","state","style","position","zIndex","width","className","theme","mode","defaultSelectedKeys","lineHeight","onClick","map","Item","padding","marginTop","margin","type","background","minHeight","itemLayout","dataSource","renderItem","index","des","filename","header","avatar","title","active","Meta","size","src","description","alt","window","screen","textAlign","this","getFieldDecorator","onCancel","footer","current","onSubmit","rules","required","htmlType","data","Component","create","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d1dc133e.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Upload, message, Button, Icon, Layout, Menu, Breadcrumb, List, Skeleton, Avatar, Modal, Steps, Form, Input, Collapse } from 'antd';\nimport './App.css';\nconst { Header, Content, Footer } = Layout;\nconst { Step } = Steps;\nconst { Panel } = Collapse;\ninterface IProps {\n  form: any;\n}\ninterface IState {\n  breadcrumbs: string[];\n  visible: boolean;\n  currentStep: number;\n  detail: any;\n  loading: boolean;\n  listData: any[];\n  curTab: string;\n}\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 },\n  },\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\nconst BASEURL = '127.0.0.1';\nconst PORT = '323';\nconst URL = BASEURL + ':' + PORT;\n\nconst UPLOAD = {\n  name: 'file',\n  action: `http://${URL}/upload`,\n  headers: {\n    authorization: 'authorization-text',\n  },\n};\nconst TABS = [\n  {\n    label: '家具',\n    value: 'furniture',\n    breadcrumbs: ['主页', '列表']\n  },\n  {\n    label: '其他',\n    value: 'other',\n    breadcrumbs: ['主页', '其他']\n  }\n]\nclass App extends Component<IProps, IState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      breadcrumbs: TABS[0].breadcrumbs,\n      visible: false,\n      currentStep: 0,\n      detail: {},\n      loading: false,\n      listData: [],\n      curTab: 'furniture'\n    }\n  }\n  public onChange = (info: any) => {\n    if (info.file.status !== 'uploading') {\n    }\n    if (info.file.status === 'done') {\n      console.log(info.file.response);\n      this.setState({\n        currentStep: 2\n      });\n      message.success('成功');\n    } else if (info.file.status === 'error') {\n      message.error(`${info.file.name} file upload failed.`);\n    }\n  }\n  public changeMenu = (a: any) => {\n    const result: any = TABS.find((item: any) => a.key === item.value);\n    this.setState({\n      breadcrumbs: result.breadcrumbs,\n      curTab: result.value\n    })\n  }\n  public showModal = () => {\n    if (navigator.userAgent !== 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36') {\n      message.warning('对不起, 您暂时尚无新增权限');\n      return;\n    }\n    this.setState({\n      visible: true\n    })\n  }\n  public hideModal = () => {\n    this.setState({\n      visible: false,\n      currentStep: 0,\n      detail: {}\n    }, this.getData)\n  }\n  public handleSubmit = (e: any) => {\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err: any, values: any) => {\n      if (!err) {\n        console.log('Received values of form: ', values);\n        this.setState({\n          currentStep: 1,\n          detail: values\n        })\n      }\n    });\n  };\n  public edit = (e: any) => {\n    console.log(e);\n    message.warning('对不起, 您暂时尚无编辑权限');\n    e.stopPropagation();\n  }\n  public delete = (e: any) => {\n    console.log(e);\n    message.warning('对不起, 您暂时尚无删除权限');\n    e.stopPropagation();\n  }\n  public getData = () => {\n    this.setState({\n      loading: true\n    }, () => {\n      const BASEURL = '127.0.0.1';\n      const PORT = '323';\n      const URL = BASEURL + ':' + PORT;\n      fetch(`http://${URL}/data`)\n        .then(function (response) {\n          return response.json();\n        })\n        .then((myJson) => {\n          this.setState({\n            loading: false,\n            listData: myJson\n          })\n          console.log(myJson);\n        });\n    })\n  }\n  public componentDidMount() {\n    this.getData();\n  }\n  public renderTabs = () => {\n    const { breadcrumbs, loading, listData, curTab } = this.state;\n    console.log(curTab);\n\n    return (\n      <Layout>\n        <Header style={{ position: 'fixed', zIndex: 1, width: '100%' }}>\n          <div className=\"logo\" />\n          <Menu\n            theme=\"dark\"\n            mode=\"horizontal\"\n            defaultSelectedKeys={[TABS[0].value]}\n            style={{ lineHeight: '64px' }}\n            onClick={this.changeMenu}\n          >\n            {\n              TABS.map((item: any) => {\n                return <Menu.Item key={item.value}>{item.label}</Menu.Item>;\n              })\n            }\n          </Menu>\n        </Header>\n        <Content style={{ padding: '0 50px', marginTop: 64 }}>\n          <div className=\"breadcrumbbox\">\n            <Breadcrumb style={{ margin: '16px 0' }}>\n              {\n                breadcrumbs.map((item: any) => {\n                  return <Breadcrumb.Item key={item}>{item}</Breadcrumb.Item>;\n                })\n              }\n            </Breadcrumb>\n            <Button onClick={this.showModal} type=\"primary\">\n              <Icon type=\"plus-square\" />新增\n            </Button>\n          </div>\n          <div style={{ background: '#fff', padding: 24, minHeight: 730 }}>\n            {\n              curTab === 'furniture' ?\n                <List\n                  className=\"demo-loadmore-list\"\n                  itemLayout=\"horizontal\"\n                  dataSource={listData}\n                  renderItem={({ name, des, filename }: any, index: number) => {\n                    return (\n                      <List.Item\n                      >\n                        <Collapse >\n                          <Panel\n                            header={\n                              <Skeleton avatar title={false} loading={loading} active>\n                                <div className=\"number\">{index + '、'}</div>\n                                <List.Item.Meta\n                                  avatar={\n                                    <Avatar size=\"large\" src={`http://${URL}/${filename}`} />\n                                  }\n                                  title={<span>{name}</span>}\n                                  description={des}\n                                />\n                                <div className=\"action\">\n                                  <div className=\"list-loadmore-edit\" onClick={(e) => this.edit(e)}>编辑</div>\n                                  <div className=\"list-loadmore-edit\" onClick={(e) => this.delete(e)}>删除</div>\n                                </div>\n                              </Skeleton>\n                            }\n                            key=\"1\"\n                          >\n                            <div className=\"panel\">\n                              <img src={`http://${URL}/${filename}`} alt=\"\" width={(window.screen.width - 150) / 3} />\n                            </div>\n                          </Panel>\n                        </Collapse>\n                      </List.Item>\n                    )\n                  }}\n                />\n                : null\n            }\n            {\n              curTab === 'other' ? <div>开发中...</div> : null\n            }\n          </div>\n        </Content>\n        <Footer style={{ textAlign: 'center' }}>让生活更美好 !</Footer>\n      </Layout>\n    )\n  }\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { visible, currentStep, detail } = this.state;\n    return (\n      <div >\n        {\n          this.renderTabs()\n        }\n        {\n          visible ?\n            <Modal\n              title=\"上传信息\"\n              visible={visible}\n              onCancel={this.hideModal}\n              footer={\n                <Button onClick={this.hideModal} type=\"primary\">\n                  确定\n  </Button>\n              }\n            >\n              <Steps current={currentStep} size=\"small\">\n                <Step title=\"填写信息\" />\n                <Step title=\"上传图片\" />\n                <Step title=\"成功!\" />\n              </Steps>\n              <div>\n                {\n                  currentStep === 0 ?\n                    <div >\n                      <Form {...formItemLayout} onSubmit={this.handleSubmit}>\n                        <Form.Item label=\"名称\">\n                          {getFieldDecorator('name', {\n                            rules: [\n                              {\n                                required: true,\n                                message: '请输入名称!',\n                              },\n                            ],\n                          })(<Input />)}\n                        </Form.Item>\n                        <Form.Item label=\"描述\">\n                          {getFieldDecorator('des', {\n                            rules: [\n                              {\n                                required: true,\n                                message: '请输入描述!',\n                              },\n                            ],\n                          })(<Input />)}\n                        </Form.Item>\n                        <Form.Item {...tailFormItemLayout}>\n                          <Button type=\"primary\" htmlType=\"submit\">\n                            下一步\n          </Button>\n                        </Form.Item>\n                      </Form>\n                    </div>\n                    : null\n\n                }\n                {\n                  currentStep === 1 ?\n                    <div>\n\n                      <Upload {...UPLOAD} onChange={this.onChange} data={detail}>\n                        <Button>\n                          <Icon type=\"upload\" /> 上传\n</Button>\n                      </Upload>\n\n                    </div> : null\n\n                }\n                {\n                  currentStep === 2 ?\n                    <div>\n                      11123\n\n                 </div> : null\n                }\n              </div>\n\n            </Modal> : null\n        }\n\n      </div>\n    );\n  }\n}\n\n\nexport default Form.create({ name: 'register' })(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}